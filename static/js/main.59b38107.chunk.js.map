{"version":3,"sources":["components/Record.js","components/TaskList.js","App.js","index.js"],"names":["Media","Airtable","apiKey","base","table","Ratings","Todo","rate","rating","console","log","props","name","update","id","then","resp","create","toString","reRun","open","window","URL","openInAt","className","onClick","this","excerpt","Component","airtable","TaskList","useState","activities","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","array","i","length","j","Math","floor","random","temp","shuffleArray","cycle","sort","a","b","fields","SelectionWeight","slice","map","record","Name","Excerpt","App","run","filter","ReactDOM","render","tasks","document","getElementById"],"mappings":"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","file":"static/js/main.59b38107.chunk.js","sourcesContent":["import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Media = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Media')\n\nconst Ratings = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Ratings')\n\nclass Todo extends Component {\n    rate = (rating) => {\n        console.log(\"Rating \" + this.props.name + \" with a \" + rating)\n\n        Media.update(this.props.id, {\"Reading\": false}).then(resp => {\n            console.log(resp)\n        })\n        \n        Ratings.create(\n            {\"fields\": {\n                \"Record\": [this.props.id],\n                \"Rating\": rating.toString()\n            }}\n        ).then(resp => {\n            console.log(resp)\n            this.props.reRun()\n        })\n    }\n\n    open = () => {\n        console.log(\"Marking \" + this.props.name + \" as reading\")\n        \n        Media.update(this.props.id, {\"Reading\": true}).then(resp => {\n            console.log(resp)\n            window.open(this.props.URL)\n        })\n    }\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblYG0PIvW9GELAvH/viwsdszRgNFdNL83F/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <button \n                    className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n\n                    onClick={() => this.openInAt()}\n                >\n                        Airtable\n            </button>\n            \n            <button onClick={() => this.open()} className=\"shadow-md hover:shadow-lg active:border-gray-500 group block rounded-lg p-4 border hover:border-gray-200 m-2 text-left justify-left text-justify\">\n                <div className=\"p-3 grid\">\n                    <div className=\"font-medium text-black text-xl pb-2\">{this.props.name}</div>\n                    <div className=\"leading-5 text-sm\">{this.props.excerpt}</div>\n                </div>\n            </button>\n            <div className=\"grid\">\n                <button onClick={() => this.rate(1)}\n                        className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                    >\n                        Next\n                </button>\n            </div>\n\n            <div className=\"grid grid-rows-1 grid-cols-2\">\n                <button \n                    className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n                    onClick={() => this.rate(2)}\n                >\n                        Cultivate\n                </button>\n                <button \n                    className= \"rounded-lg px-2 py-1 border active:border-gray-500 m-2 text-center focus:outline-none shadow hover:shadow-md active:shadow-sm\"\n\n                    onClick={() => this.rate(3)}\n                >\n                        Curate\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Todo","import React, { useState, useEffect } from 'react'\nimport Todo from \"./Record\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Media')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: 'Articles',\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n    shuffleArray(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"justify-center max-w-lg m-5 w-full\">\n            <ul>\n                {activities.length > 0 ? (\n                    activities\n                    .sort(function (a,b) {\n                        return b.fields.SelectionWeight - a.fields.SelectionWeight\n                    })\n                    .slice(0, 1)\n                    .map((record) => (\n                        <Todo\n                            name={record.fields.Name}\n                            excerpt={record.fields.Excerpt}\n                            id={record.id}\n                            reRun={props.reRun}\n                            URL={record.fields.URL}\n                            key={record.id}\n                        />\n                    ))\n                ) : (\n                    <p>Fetching Data...</p>\n                )}\n            </ul>\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport TaskList from './components/TaskList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n  /* // Get goals for filter button list\n  const [goals, setGoals] = useState({});\n\n  useState(() => {\n    airtable.list({\n        maxRecords: 999,\n        pageSize: 100,\n        view: 'Grid view',\n        cellFormat: 'json'\n    })\n    .then((data) => {\n        setGoals(data.records);\n        console.log(goals)\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  }, []);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n  }\n\n  shuffleArray(goals)\n\n  // Use filter button to filter task list\n  const [filter, setFilter] = useState(null);\n  */\n\n  return (\n    <div className=\"grid mx-auto max-w-3xl\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n      <div className=\"grid place-items-center\">\n        <TaskList \n          filter=\"False\"\n          reRun={reRun}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}