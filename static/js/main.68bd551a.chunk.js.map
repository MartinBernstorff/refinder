{"version":3,"sources":["components/Button.js","components/Record.js","components/TaskList.js","App.js","index.js"],"names":["Button","props","className","href","title","Media","Airtable","apiKey","base","table","Ratings","Article","URL","rate","rating","console","log","name","update","id","then","resp","create","toString","reRun","markReading","document","getElementById","style","borderColor","open","window","location","this","onClick","excerpt","reading","Component","airtable","TaskList","useState","activities","setActivities","useEffect","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","array","i","length","j","Math","floor","random","temp","shuffleArray","cycle","sort","a","b","fields","SelectionWeight","slice","map","record","Name","Excerpt","Reading","App","run","filter","ReactDOM","render","tasks"],"mappings":"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","file":"static/js/main.68bd551a.chunk.js","sourcesContent":["import React , {Component} from \"react\";\n\nexport default function Button(props) {\n    return (\n        <a\n                    className= \"rounded-lg px-2 py-2 border border-gray-100 active:border-gray-200 text-center focus:outline-none hover:shadow-md active:shadow-sm place-content-center text-gray-200 text-sm\"\n\n                    href={props.href}\n                >\n                        {props.title}\n        </a>\n    )\n};","import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\nimport { dom } from \"@fortawesome/fontawesome-svg-core\";\nimport Button from \"./Button\";\n\nconst Media = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Media')\n\nconst Ratings = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Ratings')\n\nclass Article extends Component {\n    URL = this.props.URL\n    rate = (rating) => {\n        console.log(\"Rating \" + this.props.name + \" with a \" + rating)\n\n        Media.update(this.props.id, {\"Reading\": false}).then(resp => {\n            console.log(resp)\n        })\n        \n        Ratings.create(\n            {\"fields\": {\n                \"Record\": [this.props.id],\n                \"Rating\": rating.toString()\n            }}\n        ).then(resp => {\n            console.log(resp)\n            this.props.reRun()\n        })\n    }\n\n    markReading = () => {\n        Media.update(this.props.id, {\"Reading\": true}).then(resp => {\n            console.log(resp);\n        })\n\n        var element = document.getElementById(\"reading\");\n        element.style.borderColor = \"green\";\n    }\n\n    open = () => {\n        console.log(\"Marking \" + this.props.name + \" as reading\")\n        \n        Media.update(this.props.id, {\"Reading\": true}).then(resp => {\n            console.log(resp)\n            window.location(this.URL);\n\n        })\n    }\n    \n    render() {\n        return (\n        <div className=\"grid gap-2 rounded-lg text-left justify-left text-justify\">\n            <a href={this.URL}>\n                <button onClick={() => this.open()} className=\"active:border-gray-500 group block rounded-lg hover:border-gray-200 text-left justify-left text-justify\">\n                    <div className=\"p-1 grid\">\n                        <div className=\"font-medium text-black text-xl pb-2\">{this.props.name}</div>\n                        <div className=\"leading-5 text-sm\">{this.props.excerpt}</div>\n                    </div>\n                </button>\n            </a>\n            <div className=\"grid grid-cols-3 gap-2\">\n                <Button\n                    href={\"https://airtable.com/tblYG0PIvW9GELAvH/viwsdszRgNFdNL83F/\" + this.props.id}\n                    title=\"Airtable\"\n                />\n                <Button\n                    href={this.URL}\n                    title=\"Safari\"\n                />\n\n                <button onClick={() => this.markReading()} className={`rounded-lg px-0 py-0 border active:border-gray-500 text-center focus:outline-none place-content-center text-sm ${this.props.reading ? \"border-green-500 text-gray-400\" : \"text-gray-200\"}`} id=\"reading\">\n                    Reading\n                </button>\n            \n                <button onClick={() => this.rate(1)}\n                        className= \"rounded-lg px-1 py-1 border active:border-gray-500 text-center focus:outline-none place-content-center text-xs\"\n                >\n                        0\n                </button>\n                <button \n                    className= \"rounded-lg px-1 py-1 border active:border-gray-500 text-center focus:outline-none place-content-center text-xs\"\n                    onClick={() => this.rate(2)}\n                >\n                        +\n                </button>\n                <button \n                    className= \"rounded-lg px-1 py-1 border active:border-gray-500 text-center focus:outline-none place-content-center text-xs\"\n\n                    onClick={() => this.rate(3)}\n                >\n                        ++\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Article","import React, { useState, useEffect } from 'react'\nimport Article from \"./Record\";\nimport Airtable from 'airtable-node'\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appaZPyyxt98aRiRU')\n    .table('Media')\n\nexport default function TaskList(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: 'Articles',\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n    shuffleArray(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"gap-5 grid w-full grid-cols-2\">\n                {activities.length > 0 ? (\n                    activities\n                    .sort(function (a,b) {\n                        return b.fields.SelectionWeight - a.fields.SelectionWeight\n                    })\n                    .slice(0, 4)\n                    .map((record) => (\n                        <Article\n                            name={record.fields.Name}\n                            excerpt={record.fields.Excerpt}\n                            id={record.id}\n                            reRun={props.reRun}\n                            URL={record.fields.URL}\n                            key={record.id}\n                            reading={record.fields.Reading}\n                        />\n                    ))\n                ) : (\n                    <p>Fetching Data...</p>\n                )}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport Button from './components/Button';\nimport TaskList from './components/TaskList'\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n  /* // Get goals for filter button list\n  const [goals, setGoals] = useState({});\n\n  useState(() => {\n    airtable.list({\n        maxRecords: 999,\n        pageSize: 100,\n        view: 'Grid view',\n        cellFormat: 'json'\n    })\n    .then((data) => {\n        setGoals(data.records);\n        console.log(goals)\n    })\n    .catch((error) => {\n        console.log(error);\n    });\n  }, []);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n  }\n\n  shuffleArray(goals)\n\n  // Use filter button to filter task list\n  const [filter, setFilter] = useState(null);\n  */\n\n  return (\n    <div className=\"mx-auto max-w-5xl m-2\">\n        {/* <ul className=\"grid grid-cols-2\">\n          {goals.length > 0 ? (\n              goals\n              .filter(record => record.fields.Name.length < 100)\n              .slice(0, 6)\n              .map((record) => (\n                  <FilterButton\n                      name={record.fields.Name}\n                      setFilter={setFilter}\n                  />\n              ))\n          ) : (\n              <p>Fetching Data...</p>\n          )}\n          </ul> */}\n        <div className=\"m-4\">\n          <TaskList \n            filter=\"False\"\n            reRun={reRun}\n          />\n          <div className=\"mt-4\">\n            <Button\n              href=\"https://getpocket.com/my-list\"\n              title=\"Search Pocket\"\n            />\n          </div>\n        </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}